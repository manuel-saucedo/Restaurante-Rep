/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package restaurant.repos;



import SQLConexion.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arima
 */
public class Empleados extends javax.swing.JPanel {

    /**
     * Creates new form Empleados
     */
Conexion cc = new Conexion();
Connection con = cc.conexion();
PreparedStatement ps;
ResultSet rs;
Statement st;
    public Empleados() {
        initComponents();
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNomE = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtApPE = new javax.swing.JTextField();
        txtApME = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPuestoE = new javax.swing.JTextField();
        txtTelE = new javax.swing.JTextField();
        txtDireE = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableEm = new javax.swing.JTable();
        btnEliminar = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btnAñadir = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Roboto Light", 1, 24)); // NOI18N
        jLabel1.setText("Empleados");

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel4.setText("Apell Paterno:");

        jLabel5.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel5.setText("Apell Materno:");

        txtApME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApMEActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel6.setText("ID_Puesto:");

        txtTelE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelEActionPerformed(evt);
            }
        });

        txtDireE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireEActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel8.setText("Dirección:");

        jLabel9.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel9.setText("Telefono:");

        TableEm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TableEm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableEmMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableEm);

        btnEliminar.setBackground(new java.awt.Color(18, 90, 173));
        btnEliminar.setPreferredSize(new java.awt.Dimension(111, 29));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ELIMINAR");

        javax.swing.GroupLayout btnEliminarLayout = new javax.swing.GroupLayout(btnEliminar);
        btnEliminar.setLayout(btnEliminarLayout);
        btnEliminarLayout.setHorizontalGroup(
            btnEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEliminarLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel7)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        btnEliminarLayout.setVerticalGroup(
            btnEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEliminarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnBuscar.setBackground(new java.awt.Color(18, 90, 173));
        btnBuscar.setPreferredSize(new java.awt.Dimension(111, 29));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("BUSCAR");

        javax.swing.GroupLayout btnBuscarLayout = new javax.swing.GroupLayout(btnBuscar);
        btnBuscar.setLayout(btnBuscarLayout);
        btnBuscarLayout.setHorizontalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnBuscarLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(29, 29, 29))
        );
        btnBuscarLayout.setVerticalGroup(
            btnBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnBuscarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        btnAñadir.setBackground(new java.awt.Color(18, 90, 173));
        btnAñadir.setPreferredSize(new java.awt.Dimension(111, 29));
        btnAñadir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAñadirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAñadirMouseExited(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("AÑADIR");

        javax.swing.GroupLayout btnAñadirLayout = new javax.swing.GroupLayout(btnAñadir);
        btnAñadir.setLayout(btnAñadirLayout);
        btnAñadirLayout.setHorizontalGroup(
            btnAñadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnAñadirLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(29, 29, 29))
        );
        btnAñadirLayout.setVerticalGroup(
            btnAñadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnAñadirLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        btnActualizar.setBackground(new java.awt.Color(18, 90, 173));
        btnActualizar.setPreferredSize(new java.awt.Dimension(111, 29));
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnActualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnActualizarMouseExited(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ACTUALIZAR");

        javax.swing.GroupLayout btnActualizarLayout = new javax.swing.GroupLayout(btnActualizar);
        btnActualizar.setLayout(btnActualizarLayout);
        btnActualizarLayout.setHorizontalGroup(
            btnActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnActualizarLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel12)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        btnActualizarLayout.setVerticalGroup(
            btnActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnActualizarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        btnLimpiar.setBackground(new java.awt.Color(18, 90, 173));
        btnLimpiar.setPreferredSize(new java.awt.Dimension(111, 29));
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseExited(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("LIMPIAR");

        javax.swing.GroupLayout btnLimpiarLayout = new javax.swing.GroupLayout(btnLimpiar);
        btnLimpiar.setLayout(btnLimpiarLayout);
        btnLimpiarLayout.setHorizontalGroup(
            btnLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLimpiarLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(29, 29, 29))
        );
        btnLimpiarLayout.setVerticalGroup(
            btnLimpiarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLimpiarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtApPE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(txtNomE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtApME, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(txtTelE)
                            .addComponent(txtDireE)
                            .addComponent(txtPuestoE, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(8, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtNomE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtApPE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtApME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtTelE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtDireE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtPuestoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TableEmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEmMouseClicked

        int fila=TableEm.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(null, "Fila no Seleccionada");
        }else{
            int id = Integer.parseInt((String)TableEm.getValueAt(fila, 0));
            String nom =(String)TableEm.getValueAt(fila, 1);
            String ApP =(String)TableEm.getValueAt(fila, 2);
            String ApM =(String)TableEm.getValueAt(fila, 3);
            String Tel =(String)TableEm.getValueAt(fila, 4);
            String Dire = (String)TableEm.getValueAt(fila, 5);
            String Pues = (String)TableEm.getValueAt(fila, 6);
            txtID.setText(""+id);
            txtNomE.setText(nom);
            txtApPE.setText(ApP);
            txtApME.setText(ApM);
            txtTelE.setText(Tel);
            txtDireE.setText(Dire);
            txtPuestoE.setText(Pues);

        }
    }//GEN-LAST:event_TableEmMouseClicked
    
    private void txtDireEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireEActionPerformed

    private void txtTelEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelEActionPerformed

    private void txtApMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApMEActionPerformed

    //Metodos
    
    public void eliminarRegistro(){
        if (txtID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error, el campo ID esta vacio o no selecciono ningun registro");
        }
        if(numero(txtID.getText())){
                JOptionPane.showMessageDialog(null, "El campo de ID solo debe llevar numeros");
            }else{ 
        int filaSeleccionada = TableEm.getSelectedRow();
         if (txtID.getText().isEmpty()) {
             JOptionPane.showMessageDialog(null, "El campo del identificador esta vacio");
        }else{    
        try{
            String SQL = "delete from empleados where ID="+TableEm.getValueAt(filaSeleccionada,0);
            Statement st = con.createStatement();
            int n = st.executeUpdate(SQL);
            if (n>=0){
                 JOptionPane.showMessageDialog(null, "Registro eliminado");
            }
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, "no es posible eliminar datos, registro no encontrado");
        }
         }
         }
    }
    public void limpiarCajas(){
    txtID.setText("");
    txtNomE.setText("");
    txtApPE.setText("");
    txtApME.setText("");
    txtTelE.setText("");
    txtDireE.setText("");
    txtPuestoE.setText("");
}
public boolean numero(String cadena){
    boolean r;
    try {
        Integer.parseInt(cadena);
        r = false;
    } catch (NumberFormatException excepcion) {
        r = true;
    }
    return r;
}
    
    public void insertarDatos(){
        String SQL = "insert into empleados (ID,Nombre,Apellido_P, Apellido_M, Telefono, Direccion, ID_Puesto) values(?,?,?,?,?,?,?)";    
        if (txtID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo del identificador esta vacio");
        }
        if(numero(txtID.getText())){
                JOptionPane.showMessageDialog(null, "El campo de ID solo debe llevar numeros");
            }else{
        if(txtNomE.getText().isEmpty()){//Nombre empleado
            JOptionPane.showMessageDialog(null, "El campo del nombre esta vacio");
        }
        if(txtApPE.getText().isEmpty()){//apellido paterno empleado
            JOptionPane.showMessageDialog(null, "El campo del apellido paterno  esta vacio");
        }
        if(txtApME.getText().isEmpty()){//apellido materno empleado
            JOptionPane.showMessageDialog(null, "El campo del materno esta vacio");
        }
        if(txtTelE.getText().isEmpty()){//telefono empleado
            JOptionPane.showMessageDialog(null, "El campo del telefono esta vacio");
        }
        if(txtDireE.getText().isEmpty()){//direccion empleado
            JOptionPane.showMessageDialog(null, "El campo de la direccion  esta vacio");
        }
        if(txtPuestoE.getText().isEmpty()){//puesto empleado
            JOptionPane.showMessageDialog(null, "El campo del puesto esta vacio");
        }
        if(txtNomE.getText().isEmpty() || txtApPE.getText().isEmpty() || txtApME.getText().isEmpty() || txtTelE.getText().isEmpty() || txtDireE.getText().isEmpty() || txtPuestoE.getText().isEmpty()){
            
        }
        else{
            if(numero(txtID.getText())){
                JOptionPane.showMessageDialog(null, "El campo de ID solo debe llevar numeros");
            }
            if(numero(txtTelE.getText())){
                JOptionPane.showMessageDialog(null, "El campo de telefono solo debe llevar numeros");
            }
            if(numero(txtID.getText())||numero(txtTelE.getText())){
            }
            else{
        try{
        ps = con.prepareStatement(SQL);        
        //PreparedStatement pst = con.prepareStatement(SQL);
        //Envia lo que se ingresa en el cuadro de texto
        ps.setString(1, txtID.getText());
        ps.setString(2, txtNomE.getText());
        ps.setString(3, txtApPE.getText());
        ps.setString(4, txtApME.getText());
        ps.setString(5, txtTelE.getText());
        ps.setString(6, txtDireE.getText());
        ps.setString(7, txtPuestoE.getText());
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro excitoso");
        limpiarCajas();
        mostrarDatos();
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "no es posible insertar datos");
    }
         }
        }
}
}
public void actualizarDatos(){
    /*if (txtID.getText().isEmpty()) {
             JOptionPane.showMessageDialog(null, "Error campo vacio, no es posible actualizar un campo vacio, Verifique que los datos esten correctos");
    }else{*/
     String SQL = "update empleados set  Nombre=?,Apellido_P=?,Apellido_M=?,Telefono=?,Direccion=?,ID_Puesto=? where ID=?";
     if (txtID.getText().isEmpty()) {
             JOptionPane.showMessageDialog(null, "El campo del identificador esta vacio");
        }
     if(numero(txtID.getText())){
                JOptionPane.showMessageDialog(null, "El campo de ID solo debe llevar numeros");
            }
     else{ 
         if(txtNomE.getText().isEmpty()){//Nombre empleado
            JOptionPane.showMessageDialog(null, "El campo del nombre esta vacio");
        }
        if(txtApPE.getText().isEmpty()){//apellido paterno empleado
            JOptionPane.showMessageDialog(null, "El campo del apellido paterno  esta vacio");
        }
        if(txtApME.getText().isEmpty()){//apellido materno empleado
            JOptionPane.showMessageDialog(null, "El campo del materno esta vacio");
        }
        if(txtTelE.getText().isEmpty()){//telefono empleado
            JOptionPane.showMessageDialog(null, "El campo del telefono esta vacio");
        }
        if(txtDireE.getText().isEmpty()){//direccion empleado
            JOptionPane.showMessageDialog(null, "El campo de la direccion  esta vacio");
        }
        if(txtPuestoE.getText().isEmpty()){//puesto empleado
            JOptionPane.showMessageDialog(null, "El campo del puesto esta vacio");
        }
        if(txtNomE.getText().isEmpty() || txtApPE.getText().isEmpty() || txtApME.getText().isEmpty() || txtTelE.getText().isEmpty() || txtDireE.getText().isEmpty() || txtPuestoE.getText().isEmpty()){
            
        }
        else{
            if(numero(txtTelE.getText())){
                JOptionPane.showMessageDialog(null, "El campo de telefono solo debe llevar numeros");
            }

            else{
     try{
       ps = con.prepareStatement(SQL);

        //Envia lo que se ingresa en el cuadro de texto
        ps.setString(1, txtNomE.getText());
        ps.setString(2, txtApPE.getText());
        ps.setString(3, txtApME.getText());
        ps.setString(4,txtTelE.getText());
        ps.setString(5, txtDireE.getText());
        ps.setString(6,txtPuestoE.getText());
        ps.setString(7,txtID.getText());
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Actualizacion excitosa");
        limpiarCajas();
        mostrarDatos();
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "no es posible Actualizar datos, el campo de telefono solo puede llevar numeros");
    }
    }
        }
     }     
}
    public void mostrarDatos(){
        //Titulos de la Tabla
        String[]titulos = {"ID","Nombre", "Apellido_P", "Apellido_M","Telefono", "Direccion","ID_Puesto"};
        String[]registros = new String[7];
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        String SQL= "select * from empleados";
   try{
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(SQL);
       while (rs.next()){
       //Titulos de la base de datos
       registros[0]= rs.getString("ID");
       registros[1]= rs.getString("Nombre");
       registros[2]= rs.getString("Apellido_P");
       registros[3]= rs.getString("Apellido_M");
       registros[4]= rs.getString("Telefono");
       registros[5]= rs.getString("Direccion");
       registros[6]= rs.getString("ID_Puesto");
       modelo.addRow(registros);
       }
       TableEm.setModel(modelo);
   }catch(Exception e){
       JOptionPane.showMessageDialog(null, "Error al Mostrar Datos ");
   }
    }
    
    private void btnAñadirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirMouseClicked
        // TODO add your handling code here:
        insertarDatos();
    }//GEN-LAST:event_btnAñadirMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        // TODO add your handling code here:
        eliminarRegistro();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
        if (txtID.getText().isEmpty()) {
             JOptionPane.showMessageDialog(null, "Error, el campo ID esta vacio");
        }
        if(numero(txtID.getText())){
                JOptionPane.showMessageDialog(null, "El campo de ID solo debe llevar numeros");
            }else{
        try {
        ps = con.prepareStatement("SELECT * FROM empleados WHERE ID = ?");
        ps.setString(1,txtID.getText());
        rs = ps.executeQuery();
        if(rs.next()){
            txtID.setText(rs.getString("ID"));
            txtNomE.setText(rs.getString("Nombre"));
            txtApPE.setText(rs.getString("Apellido_P"));
            txtApME.setText(rs.getString("Apellido_M"));
            txtTelE.setText(rs.getString("Telefono"));
            txtDireE.setText(rs.getString("Direccion"));
            txtPuestoE.setText(rs.getString("ID_Puesto"));
        }else{
            JOptionPane.showMessageDialog(null, "no es posible buscar datos, el ID es erroneo");
        }
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
        // TODO add your handling code here:
        actualizarDatos();
    }//GEN-LAST:event_btnActualizarMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        limpiarCajas();
         JOptionPane.showMessageDialog(null, "Se limpiaron los campos");
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnAñadirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirMouseEntered
        // TODO add your handling code here:
        setColor(btnAñadir);
    }//GEN-LAST:event_btnAñadirMouseEntered

    private void btnAñadirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirMouseExited
        // TODO add your handling code here:
        resetColor(btnAñadir);
    }//GEN-LAST:event_btnAñadirMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        // TODO add your handling code here:
        setColor(btnEliminar);
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        // TODO add your handling code here:
        resetColor(btnEliminar);
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        // TODO add your handling code here:
        setColor(btnBuscar);
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        // TODO add your handling code here:
        resetColor(btnBuscar);
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnActualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseEntered
        // TODO add your handling code here:
        setColor(btnActualizar);
    }//GEN-LAST:event_btnActualizarMouseEntered

    private void btnActualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseExited
        // TODO add your handling code here:
        resetColor(btnActualizar);
    }//GEN-LAST:event_btnActualizarMouseExited

    private void btnLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseEntered
        // TODO add your handling code here:
        setColor(btnLimpiar);
    }//GEN-LAST:event_btnLimpiarMouseEntered

    private void btnLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseExited
        // TODO add your handling code here:
        resetColor(btnLimpiar);
    }//GEN-LAST:event_btnLimpiarMouseExited
    //Variables que llamamos para dar color a los botones
     void setColor(JPanel panel){
    panel.setBackground(new Color(21,101,192));
    }
    void resetColor(JPanel panel){
        panel.setBackground(new Color(18,90,173));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable TableEm;
    private javax.swing.JPanel btnActualizar;
    private javax.swing.JPanel btnAñadir;
    private javax.swing.JPanel btnBuscar;
    private javax.swing.JPanel btnEliminar;
    private javax.swing.JPanel btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApME;
    private javax.swing.JTextField txtApPE;
    private javax.swing.JTextField txtDireE;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNomE;
    private javax.swing.JTextField txtPuestoE;
    private javax.swing.JTextField txtTelE;
    // End of variables declaration//GEN-END:variables
}
